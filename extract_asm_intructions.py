__author__ = 'kewang'

import glob
import numpy
import os
import subprocess
import sys
import time

instructions = ['add', 'and', 'call', 'cmp', 'dec', 'idiv', 'imul', 'inc', 'je', 'jg', 'jge', 'jl', 'jle', 'jmp',
                'jne', 'jz', 'lea', 'mov', 'neg', 'not', 'or', 'pop', 'push', 'ret', 'shl', 'shr', 'sub', 'xor']


def get_instruction_hist(args):
    filename = args
    cnt = numpy.zeros((1, len(instructions)))
    if os.path.exists(filename) is False:
        return cnt

    for inc_idx in range(len(instructions)):
        cmd = 'grep ' + instructions[inc_idx] + ' ' + filename + ' | wc -l'
        p_handle = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=True)
        cnt[0, inc_idx] = float(p_handle.communicate()[0].strip())

    return cnt


if __name__ == '__main__':
    if len(sys.argv) < 2:
        pass

    data_path = os.path.join('/run/media/kewang/externalHD/Projects/kaggle/malware/', sys.argv[1])

    instruction_number = len(instructions)

    files = glob.glob(os.path.join(data_path, '*.asm'))
    files.sort()
    train_sample_number = len(files)

    train_ins_hist = numpy.zeros((train_sample_number, instruction_number))

    t_start = time.perf_counter()
    for i in range(train_sample_number):
        print(files[i])
        train_ins_hist[i, :] = get_instruction_hist(files[i])

    print(time.perf_counter() - t_start)
    numpy.savetxt(sys.argv[1] + '_inc_count.txt', train_ins_hist)
