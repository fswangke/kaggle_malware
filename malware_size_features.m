function malware_size_features()

load('malware_features.mat');

train_data_path = '/run/media/kewang/externalHD/Projects/kaggle/malware/train';
test_data_path = '/run/media/kewang/externalHD/Projects/kaggle/malware/test';

train_sample_asm_files = dir(fullfile(train_data_path, '*.asm'));
train_sample_bytes_files = dir(fullfile(train_data_path, '*.bytes'));

train_asm_sizes = extractfield(train_sample_asm_files, 'bytes');
train_byte_sizes = extractfield(train_sample_bytes_files, 'bytes');
train_feature = cat(2, train_bag_of_bytes, train_asm_sizes', train_byte_sizes', ...
    train_asm_sizes' ./ train_byte_sizes');

test_sample_asm_files = dir(fullfile(test_data_path, '*.asm'));
test_sample_bytes_files = dir(fullfile(test_data_path, '*.bytes'));
test_asm_sizes = extractfield(test_sample_asm_files, 'bytes');
test_byte_sizes = extractfield(test_sample_bytes_files, 'bytes');
test_feature = cat(2, test_bag_of_bytes, test_asm_sizes', ...
    test_byte_sizes', ...
    test_asm_sizes' ./ test_byte_sizes');


features = [train_feature; test_feature];
features = normc(log(features + 1));

train_feature = features(1: length(train_sample_asm_files), :);
test_feature = features(length(train_sample_asm_files) + 1 : end, :);

save('malware_feature2.mat', ...
    'train_feature', 'test_feature', ...
    'train_asm_sizes', 'train_byte_sizes', ...
    'test_asm_sizes', 'test_byte_sizes', ...
    'train_bag_of_bytes', 'test_bag_of_bytes', ...
    'train_labels');
    
end
